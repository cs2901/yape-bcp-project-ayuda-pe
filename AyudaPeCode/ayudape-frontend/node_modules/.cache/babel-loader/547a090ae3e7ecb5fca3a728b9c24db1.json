{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // external dependencies\n\n\nimport React from 'react'; //components\n\nimport { getClassHoc, getFunctionHoc } from './components'; // constants\n\nimport { DEFAULT_OPTIONS, LIFECYCLE_METHODS } from './constants'; // utils\n\nimport { createSingleLifecycleMethodDecorator, isPlainObject, isReactClass } from './utils';\n/**\n * @function addLifecycleMethods\n *\n * @description\n * add the lifecycle hooks to the component and return it\n *\n * @param {Object} [methods={}] the methods passed\n * @param {Object} [optionsPassed={}] the options passed\n * @returns {function(PassedComponent: ReactComponent): ReactComponent} the component augmented with lifecycle methods\n */\n\nvar addLifecycleMethods = function addLifecycleMethods() {\n  var methods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var optionsPassed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isPlainObject(methods)) {\n    throw new TypeError('Methods passed must be in the form of a plain object.');\n  }\n\n  if (!isPlainObject(optionsPassed)) {\n    throw new TypeError('Options passed must be in the form of a plain object.');\n  }\n\n  return function (PassedComponent) {\n    var getHoc = isReactClass(PassedComponent) ? getClassHoc : getFunctionHoc;\n    return getHoc(PassedComponent, methods, _extends({}, DEFAULT_OPTIONS, optionsPassed));\n  };\n};\n\nvar _Object$keys$reduce = Object.keys(LIFECYCLE_METHODS).reduce(function (exportsObject, method) {\n  // eslint-disable-next-line no-param-reassign\n  exportsObject[method] = createSingleLifecycleMethodDecorator(method, addLifecycleMethods);\n  return exportsObject;\n}, {}),\n    getChildContext = _Object$keys$reduce.getChildContext,\n    UNSAFE_componentWillMount = _Object$keys$reduce.UNSAFE_componentWillMount,\n    componentWillMount = _Object$keys$reduce.componentWillMount,\n    componentDidMount = _Object$keys$reduce.componentDidMount,\n    UNSAFE_componentWillReceiveProps = _Object$keys$reduce.UNSAFE_componentWillReceiveProps,\n    componentWillReceiveProps = _Object$keys$reduce.componentWillReceiveProps,\n    shouldComponentUpdate = _Object$keys$reduce.shouldComponentUpdate,\n    UNSAFE_componentWillUpdate = _Object$keys$reduce.UNSAFE_componentWillUpdate,\n    componentWillUpdate = _Object$keys$reduce.componentWillUpdate,\n    getSnapshotBeforeUpdate = _Object$keys$reduce.getSnapshotBeforeUpdate,\n    componentDidUpdate = _Object$keys$reduce.componentDidUpdate,\n    componentDidCatch = _Object$keys$reduce.componentDidCatch,\n    componentWillUnmount = _Object$keys$reduce.componentWillUnmount;\n\nexport { getChildContext };\nexport { UNSAFE_componentWillMount };\nexport { componentWillMount };\nexport { componentDidMount };\nexport { UNSAFE_componentWillReceiveProps };\nexport { componentWillReceiveProps };\nexport { shouldComponentUpdate };\nexport { UNSAFE_componentWillUpdate };\nexport { componentWillUpdate };\nexport { getSnapshotBeforeUpdate };\nexport { componentDidUpdate };\nexport { componentDidCatch };\nexport { componentWillUnmount };\nexport default addLifecycleMethods;","map":null,"metadata":{},"sourceType":"module"}
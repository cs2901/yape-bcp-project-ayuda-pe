{"ast":null,"code":"import _objectSpread from \"/home/nicolas/UTEC/Ingenier\\xEDa de Software I/yape-bcp-project-ayuda-pe/AyudaPeCode/ayudape-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nicolas/UTEC/Ingenier\\xEDa de Software I/yape-bcp-project-ayuda-pe/AyudaPeCode/ayudape-frontend/src/App.js\";\nimport React from 'react';\nimport MessageList from './components/MessageList';\nimport Header from './components/Header';\nimport Sendform from './components/Sendform';\nimport { sendMessage } from './endpoints';\nimport { hotjar } from 'react-hotjar';\nhotjar.initialize(1380357, 6);\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userInput: \"\",\n      messages: []\n    };\n\n    this.handleSendMessage = async () => {\n      if (this.state.userInput.trim().length === 0) return;\n      const newMessage = {\n        text: this.state.userInput,\n        sender: true,\n        date: '9:00'\n      };\n      let _messages = this.state.messages;\n\n      _messages.push(newMessage);\n\n      let chatbotMessages;\n\n      try {\n        let r = await sendMessage(newMessage.text);\n        const data = r.data.output.generic;\n        chatbotMessages = data.map(message => new Object({\n          date: '8:30',\n          sender: false,\n          text: message.text,\n          source: message.source,\n          handler: message.text ? message.text.charAt(0) === '+' ? () => {\n            this.handleButtonClick(message.text);\n          } : () => {\n            console.log(\"esto no es un boton\");\n          } : () => {\n            console.log(\"no es mensaje\");\n          }\n        }));\n      } catch (e) {\n        console.log(e);\n      } finally {\n        this.setState(s => {\n          let _messages_ = _messages.concat(chatbotMessages);\n\n          return _objectSpread({}, s, {\n            userInput: \"\",\n            messages: _messages_\n          });\n        });\n      }\n    };\n\n    this.handleButtonClick = async text => {\n      this.setState(s => {\n        return _objectSpread({}, s, {\n          userInput: text.substr(1)\n        });\n      }, () => this.handleSendMessage());\n    };\n\n    this.handleUserInputChange = input => {\n      if (this.state.userInput === \"\" && input.trim().length === 0) return;\n      this.setState(s => {\n        return _objectSpread({}, s, {\n          userInput: input\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState(s => {\n      return _objectSpread({}, s, {\n        messages: [{\n          text: \"Hola\",\n          sender: true,\n          handler: () => {}\n        }]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(MessageList, {\n      messages: this.state.messages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Sendform, {\n      onUserInputChange: this.handleUserInputChange,\n      userInput: this.state.userInput,\n      send: this.handleSendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nicolas/UTEC/IngenierÃ­a de Software I/yape-bcp-project-ayuda-pe/AyudaPeCode/ayudape-frontend/src/App.js"],"names":["React","MessageList","Header","Sendform","sendMessage","hotjar","initialize","App","Component","state","userInput","messages","handleSendMessage","trim","length","newMessage","text","sender","date","_messages","push","chatbotMessages","r","data","output","generic","map","message","Object","source","handler","charAt","handleButtonClick","console","log","e","setState","s","_messages_","concat","substr","handleUserInputChange","input","componentDidMount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACAA,MAAM,CAACC,UAAP,CAAkB,OAAlB,EAA2B,CAA3B;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADsB;;AAAA,SAK9BC,iBAL8B,GAKV,YAAW;AAC7B,UAAG,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,IAArB,GAA4BC,MAA5B,KAAuC,CAA1C,EAA6C;AAC7C,YAAMC,UAAU,GAAG;AAACC,QAAAA,IAAI,EAAC,KAAKP,KAAL,CAAWC,SAAjB;AAA2BO,QAAAA,MAAM,EAAC,IAAlC;AAAuCC,QAAAA,IAAI,EAAC;AAA5C,OAAnB;AACA,UAAIC,SAAS,GAAG,KAAKV,KAAL,CAAWE,QAA3B;;AACAQ,MAAAA,SAAS,CAACC,IAAV,CAAeL,UAAf;;AACA,UAAIM,eAAJ;;AACE,UAAG;AACC,YAAIC,CAAC,GAAG,MAAMlB,WAAW,CAACW,UAAU,CAACC,IAAZ,CAAzB;AACA,cAAMO,IAAI,GAAGD,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAcC,OAA3B;AACAJ,QAAAA,eAAe,GAAGE,IAAI,CAACG,GAAL,CAASC,OAAO,IAC9B,IAAIC,MAAJ,CAAW;AACPV,UAAAA,IAAI,EAAE,MADC;AAEPD,UAAAA,MAAM,EAAE,KAFD;AAGPD,UAAAA,IAAI,EAAEW,OAAO,CAACX,IAHP;AAIPa,UAAAA,MAAM,EAAEF,OAAO,CAACE,MAJT;AAKPC,UAAAA,OAAO,EAAEH,OAAO,CAACX,IAAR,GAAeW,OAAO,CAACX,IAAR,CAAae,MAAb,CAAoB,CAApB,MAAyB,GAAzB,GAA8B,MAAM;AAAC,iBAAKC,iBAAL,CAAuBL,OAAO,CAACX,IAA/B;AAAqC,WAA1E,GAA2E,MAAM;AAACiB,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAAmC,WAApI,GAAuI,MAAM;AAACD,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAA6B;AAL7K,SAAX,CADc,CAAlB;AASH,OAZD,CAYE,OAAMC,CAAN,EAAQ;AACNF,QAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACH,OAdD,SAcU;AACN,aAAKC,QAAL,CAAcC,CAAC,IAAI;AACf,cAAIC,UAAU,GAAGnB,SAAS,CAACoB,MAAV,CAAiBlB,eAAjB,CAAjB;;AACA,mCACOgB,CADP;AAEI3B,YAAAA,SAAS,EAAE,EAFf;AAGIC,YAAAA,QAAQ,EAAE2B;AAHd;AAKH,SAPD;AAQH;AACJ,KAnC6B;;AAAA,SAqC9BN,iBArC8B,GAqCV,MAAOhB,IAAP,IAAgB;AAClC,WAAKoB,QAAL,CAAcC,CAAC,IAAI;AACjB,iCACKA,CADL;AAEE3B,UAAAA,SAAS,EAAEM,IAAI,CAACwB,MAAL,CAAY,CAAZ;AAFb;AAID,OALD,EAKE,MAAM,KAAK5B,iBAAL,EALR;AAMD,KA5C6B;;AAAA,SA8C9B6B,qBA9C8B,GA8CLC,KAAD,IAAW;AAC/B,UAAG,KAAKjC,KAAL,CAAWC,SAAX,KAAyB,EAAzB,IAA+BgC,KAAK,CAAC7B,IAAN,GAAaC,MAAb,KAAwB,CAA1D,EAA6D;AAC/D,WAAKsB,QAAL,CAAcC,CAAC,IAAI;AACjB,iCACKA,CADL;AAEE3B,UAAAA,SAAS,EAAEgC;AAFb;AAID,OALD;AAMD,KAtD6B;AAAA;;AAwD9BC,EAAAA,iBAAiB,GAAE;AACjB,SAAKP,QAAL,CAAcC,CAAC,IAAI;AACjB,+BACKA,CADL;AAEE1B,QAAAA,QAAQ,EAAC,CAAC;AAACK,UAAAA,IAAI,EAAC,MAAN;AAAaC,UAAAA,MAAM,EAAC,IAApB;AAAyBa,UAAAA,OAAO,EAAC,MAAI,CAAE;AAAvC,SAAD;AAFX;AAID,KALD;AAMD;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,QAAD;AAAU,MAAA,iBAAiB,EAAE,KAAK8B,qBAAlC;AAAyD,MAAA,SAAS,EAAE,KAAKhC,KAAL,CAAWC,SAA/E;AAA0F,MAAA,IAAI,EAAE,KAAKE,iBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AAzE6B;;AA4ElC,eAAeL,GAAf","sourcesContent":["import React from 'react'\nimport MessageList from './components/MessageList'\nimport Header from './components/Header'\nimport Sendform from './components/Sendform'\nimport {sendMessage} from './endpoints'\nimport { hotjar } from 'react-hotjar';\nhotjar.initialize(1380357, 6);\n\nclass App extends React.Component {\n    state = {\n      userInput: \"\",\n      messages: []\n    };\n    handleSendMessage = async() => {\n      if(this.state.userInput.trim().length === 0) return;\n      const newMessage = {text:this.state.userInput,sender:true,date:'9:00'};\n      let _messages = this.state.messages;\n      _messages.push(newMessage);\n      let chatbotMessages;\n        try{\n            let r = await sendMessage(newMessage.text);\n            const data = r.data.output.generic;\n            chatbotMessages = data.map(message =>\n                new Object({\n                    date: '8:30',\n                    sender: false,\n                    text: message.text,\n                    source: message.source,\n                    handler: message.text ? message.text.charAt(0)==='+'? () => {this.handleButtonClick(message.text)}:() => {console.log(\"esto no es un boton\")} : () => {console.log(\"no es mensaje\")}\n                })\n            );\n        } catch(e){\n            console.log(e);\n        } finally {\n            this.setState(s => {\n                let _messages_ = _messages.concat(chatbotMessages);\n                return({\n                    ...s,\n                    userInput: \"\",\n                    messages: _messages_\n                });\n            });\n        }\n    };\n\n    handleButtonClick = async (text) => {\n      this.setState(s => {\n        return({\n          ...s,\n          userInput: text.substr(1)\n        })\n      },() => this.handleSendMessage())\n    }\n\n    handleUserInputChange = (input) => {\n        if(this.state.userInput === \"\" && input.trim().length === 0) return;\n      this.setState(s => {\n        return({\n          ...s,\n          userInput: input\n        })\n      })\n    };\n\n    componentDidMount(){\n      this.setState(s => {\n        return({\n          ...s,\n          messages:[{text:\"Hola\",sender:true,handler:()=>{}}]\n        })\n      })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Header />\n                <MessageList messages={this.state.messages}/>\n                <Sendform onUserInputChange={this.handleUserInputChange} userInput={this.state.userInput} send={this.handleSendMessage}/>\n            </div>\n        );\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}